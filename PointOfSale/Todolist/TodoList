# Point of sale - Client first design with mock objects
#Inbox

# Sneak Preview

   - Branch client-first-design
   - In this series, we rewind to the beginning and demonstrate **how to design the Sell One Item feature using Client-First Design with Mock Objects**. We introduce **collaboration and contract tests** and show you step-by-step **how to avoid the integrated tests scam**.

# Index

	Redo From Start: 35 minutes
	The Client Gets Their Way: 25 minutes
	I'm All About that Contract: 20 minutes
	Contract Tests: 35 minutes
	Legacy, Singleton, I/O: 25 minutes
	Shout Out to the Console: 20 minutes
	Show Me the Prices: 20 minutes
	A Long Look Down the Road: 35 minutes
	It Just Works!: 20 minutes

# Redo From Start
This section will take approximately 40 minutes.

**Clusters of behavior** push us towards complicated tests with a lot of duplication. 
If we can isolate the parts from each other, then **we can avoid the combinatoric explosion in the number of tests that we need to write**. Here we start re-implementing the "sell one item" feature using Client-First Design and Mock Objects. 

You'll see over the coming series that **mock objects** don't have to lead to hyperactive, brittle tests that restrict refactoring. On the contrary, we will use mocks to give us timely and uncompromising feedback about the health (or not) of the dependencies among modules.

We begin with a primer on Presenter-First Design, a discussion about balancing emergent design with design patterns, and a reminder of how to write our first test with **JMock**.

- Los cluster behavior los manejamos con mock objects.

- Sabemos como es el manejo del caso:
		- Barcode Scan un barCode | Display display text (en un lcd por ej)
- Sabemos por el caso anterior que tenemos que vender, dado un catalogo y mostrar en un display

			Sale (controlador)

		Catalog(Model)		Display(vista)

- En vez de meter test que chequeen todo, me voy a centrar en el **controlador** y voy a **diseñar interfaces** en el proceso para la **vista** y para **modelo**; esto me va a permitir enfocarme en la implementacion de los layers y **la idea es pensar el BEHAVIOR que necesito del Modelo y de la Vista**, **en lugar de diseñar las interfaces para colaborar con el diseño hacia abajo**.

- La idea es guiar el diseño y testearlo!.

- Resumen: Creo este cliente 1ero (que empieza con Sale) y diseño que necesito de Catalog y de Display y luego implemento Catalog y Display 





 